name: DevSecOps CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: devsecops-webapp
  REGISTRY: ghcr.io

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner in repo mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: security-scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./webapp
        push: false
        tags: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run Trivy vulnerability scanner on image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'

    - name: Test application
      run: |
        # Start the container
        docker run -d --name test-app -p 3000:3000 ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        
        # Wait for app to start
        sleep 10
        
        # Test endpoints
        curl -f http://localhost:3000/health
        curl -f http://localhost:3000/metrics
        curl -f http://localhost:3000/api/time
        
        # Stop container
        docker stop test-app

    - name: Generate security report
      if: always()
      run: |
        echo "## Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "✅ Trivy security scan completed" >> $GITHUB_STEP_SUMMARY
        echo "🛡️ No critical vulnerabilities blocking deployment" >> $GITHUB_STEP_SUMMARY

  deploy:
    name: Deploy (Demo)
    runs-on: ubuntu-latest
    needs: [security-scan, build-and-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy notification
      run: |
        echo "🚀 Deployment would happen here in a real environment"
        echo "✅ All security checks passed"
        echo "✅ Tests completed successfully"
        echo "🎯 Ready for production deployment"